/******************************************

Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.

Example 1:
Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

Example 2:
Input: nums = [1,1]
Output: [2]

******************************************/

/*******************************CODE***set***********************/

vector<int> findDisappearedNumbers(vector<int>& nums) {
    
        set<int>s(nums.begin(),nums.end());
        vector<int>v;
        int i=1;
        for(int i=1;i<=nums.size();i++)
        {
            if(s.count(i)==0)
                v.push_back(i);
        }
        return v;
    }



/*********************code alternative***********************

 vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int>v;
        for(int i : nums)
        {
            while(nums[i-1]!=i)
                swap(i,nums[i-1]);
        }
        
        for(int i=1;i<=nums.size();i++)
        {
            if(i!=nums[i-1])
                v.push_back(i);
        }
        return v;
    }

***********************************************************/
