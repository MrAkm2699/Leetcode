/************************

Example 1:
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:
Input: nums = [3,2,4], target = 6
Output: [1,2]

Example 3:
Input: nums = [3,3], target = 6
Output: [0,1]

***************************/

/***************CODE***************/
  vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int>m;
        int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            int x=target-nums[i];
           if(m.find(x)!=m.end())
           {
               return {i,m[target-nums[i]]};
           }
            m[nums[i]]=i;
        }
        return {};
    }
